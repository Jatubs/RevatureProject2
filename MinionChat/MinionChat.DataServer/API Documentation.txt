------------api/getGroupChat  ------ gives list of messages USE http://minionchatrestapi.azurewebsites.net/    <- ADD API ROUTE
input GroupInfo						             IMPORTANT PROPERTY NAME NEEDS TO MATCH 

	string Name

output List<MessageInfo>

	string NameofSender { get; set; }
        string Message { get; set; }
        DateTime TimeofMessage { get; set; }
        string NameofGroup { get; set; }

--------------api/AddChatToGroup----- Adds chat to message in datbase you need to add to chatlist of your ui
input MessageInfo

	string NameofSender { get; set; }
        string Message { get; set; }
        DateTime TimeofMessage { get; set; }      <- dont need to fill out can leave it empty when you send
        string NameofGroup { get; set; }
	
output 
	bool

-------------api/AddFriend---------- adds friend and gives back updated list of string for friend
input UsernameandFriendname
	
        public string Username { get; set; }
        public string Friendname { get; set; }

output 
	List<string>

--------------api/addGroup-------- adds group and gives back updated list of string for group
input GroupInfo						    

	string Name

output 
	List<string>

----------api/RemoveFriend------- removes friend and gives back updated list of string for friend
input UsernameandFriendname
	
        public string Username { get; set; }
        public string Friendname { get; set; }

output 
	List<string>


----------api/RemoveGroup------- removes group and gives back updated list of string for group
input GroupInfo						    

	string Name

output 
	List<string>



-=--------api/Login--------------
input UserInfo

		public int UserId { get; set; }
        public string Username { get; set; }    <----------   TestThatsOnDB =>>> username: we password: hi
        public string Password { get; set; }    <----------- just need those 2
        public string Name { get; set; }

output 
		bool
	
-------api/AddChatToFriend------------
input MessageInfo

	string NameofSender { get; set; }
        string Message { get; set; }
        DateTime TimeofMessage { get; set; }      <- dont need to fill out can leave it empty when you send
        string NameofGroup { get; set; }          <------- need to make it Username+FriendName for friend chat
	
output 
	bool
	 Task<List<MessageInfo>> GetFriendChat(UsernameandFriendname friendtochat)
        
--------api/getFriendChat----------
input UsernameandFriendname
	
        public string Username { get; set; }
        public string Friendname { get; set; }

output  List<MessageInfo>

		string NameofSender { get; set; }
        string Message { get; set; }
        DateTime TimeofMessage { get; set; }      <- dont need to fill out can leave it empty when you send
        string NameofGroup { get; set; }









